import java.util.*;
class Dynamicarray
{
    private int arr[];
    private int size;
    private int capacity;
    static final int initialcapacity=16;

    Dynamicarray()
    {
        size=0;
        arr=new int[initialcapacity];
        capacity=initialcapacity;
    }
    public void add(int value)
    {
        if(size==capacity)
        {
            expandarray();
        }
        arr[size++]=value;

    }
    private void expandarray()
    {
        capacity*=capacity;
        arr=Arrays.copyOf(arr,capacity);
    }
    public void display()
    {
        if(size==0)
        System.out.println("NO ELEMENT TO DISPLAY");
        else{
         for(int i=0;i<size;i++)
         System.out.print(arr[i]+" ");
         System.out.println();
        }
    }
    public void insertpos(int p,int v)
    {
        if(size==capacity)
        {
            expandarray();
        }
        for(int i=size-1;i>=p;i--)
        {
            arr[i+1]=arr[i];
        }
        arr[p]=v;
        size++;
    }
    public void deletepos(int p)
    {
        for(int i=p+1;i<size;i++)
        arr[i-1]=arr[i];
        size--;
    }
    private void shrinksize()
    {
        if(capacity>initialcapacity && capacity>size*3)
        {
              capacity/=capacity;
              arr=Arrays.copyOf(arr,capacity);
        }

    }
    public void deleteatend()
    {
        size--;
    }
    public void deleteatbeginning()
    {
        if(size==1)
        size--;
        else
        {for(int i=0;i<size;i++)
        arr[i]=arr[i+1];
        size--;
        }
        
    }
    public void getindex(int v)
    {
        int a=0;
        int l=0;
        for(int i=0;i<size;i++)
        {
          if(arr[i]==v)
         { 
            a++;
            l=i;
          }
        }
        if(a==0)
        System.out.println(-1);
        else
        System.out.println(l);
     }
     public void updateindex(int ind,int v)
     {
           arr[ind]=v;
     }
     public void searchindex(int ind)
     {
          System.out.println(arr[ind]);
     }
     public void clear()
     {
        size=0;
     }


}
class Listmain
{
    public static void main(String[]args)
    {
         Dynamicarray list=new Dynamicarray();
         Scanner sc=new Scanner(System.in);
         while(true)
        {
          System.out.println("***********MENU**************");
          System.out.println("1.Insert at End");
          System.out.println("2.Display the list");
          System.out.println("3.Insert at Specific position");
          System.out.println("4.Delete from Specific position");
          System.out.println("5.Delete at end");
          System.out.println("6.Delete at beginning");
          System.out.println("7.get index");
          System.out.println("8.update index");
          System.out.println("9.search index");
          System.out.println("10.clear");
          System.out.println("11.exit");
          System.out.print("Enter your choice ");
          int choice;
          int value;
          int position;
          choice=sc.nextInt();
          switch(choice){
            case 1:System.out.println("Insert at end ");
            list.add(sc.nextInt());
            break;

            case 2:System.out.println("Display the list");
            list.display();
            break;

            case 3:System.out.println("Insert at Specific position");
            position=sc.nextInt();
            value=sc.nextInt();
            list.insertpos(position,value);
            break;

            case 4:System.out.println("Delete from specific position");
            position=sc.nextInt();
            list.deletepos(position);
            break;

            case 5:System.out.println("Delete at end");
            list.deleteatend();
            break;

            case 6:System.out.println("Delete at beginning");
            list.deleteatbeginning();
            break;
            
            case 7:System.out.println("Get index");
            value=sc.nextInt();
            list.getindex(value);
            break;

            case 8:System.out.println("update index");
            int index=sc.nextInt();
            value=sc.nextInt();
            list.updateindex(index,value);
            break;

            case 9:System.out.println("search index");
            index=sc.nextInt();
            list.searchindex(index);
            break;

            case 10:System.out.println("clear");
            list.clear();
            break;

            case 11:System.exit(0);
            break;

            default:System.out.println("Enter a valid choice");

         }

        }

    }
}
